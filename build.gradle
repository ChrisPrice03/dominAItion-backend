plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'dominAItion-backend'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
     // Core Spring Boot web support (for REST controllers)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // WebSocket + STOMP messaging support
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MongoDB (if you use @Document, @Id, etc.)
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // JSON support (usually included automatically)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Optional: validation, if you use @Valid
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // For testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'  

    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

